"""empty message

Revision ID: 4506afd598f3
Revises: 
Create Date: 2024-09-10 04:49:30.286177

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4506afd598f3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=256), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('phone', sa.String(length=12), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('middle_name', sa.String(length=64), nullable=True),
    sa.Column('position', sa.String(length=64), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('phone', sa.String(length=12), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('representative', sa.String(length=128), nullable=True),
    sa.Column('contact', sa.String(length=128), nullable=True),
    sa.Column('phone', sa.String(length=12), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supply_date', sa.Date(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('technical_specifiactions', sa.String(length=256), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('image', sa.String(length=1024), nullable=True),
    sa.Column('purchase_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('selling_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('is_in_stock', sa.Boolean(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('supply_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('count >= 0', name='check_count_positive'),
    sa.CheckConstraint('purchase_cost >= 0', name='check_purchase_cost_positive'),
    sa.CheckConstraint('selling_cost >= 0', name='check_selling_cost_positive'),
    sa.ForeignKeyConstraint(['supply_id'], ['supplies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('posting_date', sa.Date(), nullable=True),
    sa.Column('execution_date', sa.Date(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('good_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['good_id'], ['goods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('goods')
    op.drop_table('supplies')
    op.drop_table('suppliers')
    op.drop_table('employees')
    op.drop_table('clients')
    # ### end Alembic commands ###
